version: '3.8'

services:
  kafka-ui-dbwk:
    container_name: kafka-ui-dbwk
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka-dbwk
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      SERVER_SERVLET_CONTEXT_PATH: /kafka-ui-dbwk
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-dbwk:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect0:8083
    networks:
      - dbwk-network

  zookeeper-dbwk:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-dbwk
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - dbwk-network

  kafka-dbwk:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-dbwk
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-dbwk:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-dbwk:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka-dbwk -Dcom.sun.management.jmxremote.rmi.port=9997
    depends_on:
      - zookeeper-dbwk
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - dbwk-network

  kafka-create-topic:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka-dbwk:
        condition: service_healthy
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-dbwk:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka-dbwk:29092
    networks:
      - dbwk-network
    volumes:
      - kafka-data:/var/lib/kafka/data
      - ./create_kafka_topic.sh:/usr/bin/create_kafka_topic.sh
    entrypoint: ["/bin/sh", "-c", "/usr/bin/create_kafka_topic.sh"]

  redis-dbwk:
    image: 'redis:latest'
    container_name: redis-dbwk
    command:
      - --requirepass secret
    ports:
      - '6379:6379'
    environment:
      - REDIS_PASSWORD=secret
    networks:
      - dbwk-network

  worker-dbwk:
    build: .
    volumes:
      - ./config_multi_worker.yaml:/app/config/config.yaml
    environment:
      - BROKERS=kafka-dbwk:9092
      - REDIS_HOST=redis-dbwk:6379
      - REDIS_PASS=secret
    depends_on:
      kafka-dbwk:
        condition: service_healthy
      redis-dbwk:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8088/api/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dbwk-network
    deploy:
      replicas: 3

  nginx-dbwk:
    container_name: nginx-dbwk
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "8088:8088"
    networks:
      - dbwk-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - worker-dbwk

networks:
  dbwk-network:
    driver: bridge

volumes:
  kafka-data:
