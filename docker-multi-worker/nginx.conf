events { }

http {
    upstream worker-ts {
        server docker-multi-worker-worker-ts-1:8088;
        server docker-multi-worker-worker-ts-2:8088;
        server docker-multi-worker-worker-ts-3:8088;

        # Advanced health check using the third-party module is not available,
        # but you can use simple methods such as max_fails and fail_timeout.
        server docker-multi-worker-worker-ts-1:8088 max_fails=3 fail_timeout=30s;
        server docker-multi-worker-worker-ts-2:8088 max_fails=3 fail_timeout=30s;
        server docker-multi-worker-worker-ts-3:8088 max_fails=3 fail_timeout=30s;
    }

    upstream kafka-ui-ts {
        server kafka-ui-ts:8080;
    }

    server {
        listen 8088;

        location /api/ {
            proxy_pass http://worker-ts;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /kafka-ui-ts/ {
            proxy_pass http://kafka-ui-ts;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
